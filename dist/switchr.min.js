function Switchr(initParam){var self=this;this.Groups={},this.baseGroupName="main",this.init(initParam)}function Group(parent){this.elements={},this.parent=parent}Switchr.prototype.hideMe=function(_ele){_ele?_ele.hidden=(_ele.hidden,!0):(console.error("There are no parameters"),console.info("Please add an html element in as a parameter"))},Switchr.prototype.showMe=function(_ele){_ele?_ele.hidden=(_ele.hidden,!1):(console.error("There are no parameters"),console.info("Please add an html element in as a parameter"))},Switchr.prototype.addGroup=function(group){if(group&&helper.ifKeyExists(group,this.Groups)){if(helper.checkType(group,"string"))this.createGroup(group);else if(helper.checkType(group,"array"))for(var i=0,length=group.length;i<length;i++)this.createGroup(group[i])}else console.error("There are no parameters or your param isn't a string"),console.info("Please add either a string or array of strings as parameter")},Switchr.prototype.createGroup=function(key){this.Groups[key]=new Group(this)},Switchr.prototype.group=function(key){var group={};if(key){var keyFound=!1;for(var i in this.Groups)if(key===i){group=this.Groups[key],keyFound=!0;break}if(!keyFound)return console.error("Your key: "+key+". was not found in the Group Object."),console.info("Please add this key using addGroup(key)"),!1}else group=helper.getFirst(this.Groups);return group},Switchr.prototype.init=function(groupKey){if(groupKey)if(helper.checkType(groupKey,"array"))for(var i=0,length=groupKey.length;i<length;i++)helper.checkType(groupKey[i],"string")&&this.createGroup(groupKey[i]);else console.error("Parameter 1's data type should be Array. Data type of inputed parameter "+typeof groupKey);else this.createGroup(this.baseGroupName)},Group.prototype.add=function(key,id){if(helper.ifKeyExists(key,this.elements))console.error("The key ("+key+") already exists."),console.info("Please use a different key");else if(helper.checkType(key,"string")&&helper.checkType(id,"undefined"))helper.addElement(this,key,key);else if(helper.checkType(key,"array")&&helper.checkType(id,"undefined"))for(var i=0,length=key.length;i<length;i++)helper.checkType(key[i],"string")&&helper.addElement(this,key[i],key[i]);else if(helper.checkType(key,"string")&&helper.checkType(id,"string"))helper.addElement(this,key,id);else if(helper.checkType(key,"array")&&helper.checkType(id,"array"))for(var i=0,length=key.length;i<length;i++)helper.checkType(key[i],"string")&&helper.checkType(id[i],"string")&&helper.addElement(this,key[i],id[i])},Group.prototype.hide=function(key,_ftn){if(key){if(helper.checkType(key,"string"))this.parent.hideMe(this.elements[key].domEle);else if(helper.checkType(key,"array"))for(var i=0,length=key.length;i<length;i++)this.parent.hideMe(this.element[key[i]].domEle),helper.checkType(_ftn,"function")&&_ftn(this.elements[key[i]].domEle);else if(helper.checkType(key,"function")){var element=helper.getFirst(this.elements);this.parent.hideMe(element.domEle),key(element.domEle)}}else{var element=helper.getFirst(this.elements);this.parent.hideMe(element.domEle)}helper.checkType(_ftn,"function")&&_ftn(this.elements[key].domEle)},Group.prototype.hideAll=function(key,_ftn){for(var i in this.elements)this.parent.hideMe(this.elements[i].domEle);key&&(helper.checkType(key,"string")?this.parent.showMe(this.elements[key].domEle):helper.checkType(key,"function")&&key()),helper.checkType(_ftn,"function")&&_ftn()},Group.prototype.show=function(key,_ftn){if(key){if(helper.checkType(key,"string"))this.parent.showMe(this.elements[key].domEle);else if(helper.checkType(key,"array"))for(var i=0,length=key.length;i<length;i++)this.parent.showMe(this.element[key[i]].domEle),helper.checkType(_ftn,"function")&&_ftn(this.elements[key[i]].domEle);else if(helper.checkType(key,"function")){var element=helper.getFirst(this.elements);this.parent.showMe(element.domEle),key(element.domEle)}}else{var element=helper.getFirst(this.elements);this.parent.showMe(element.domEle)}helper.checkType(_ftn,"function")&&_ftn(this.elements[key].domEle)},Group.prototype.showAll=function(key,_ftn){for(var i in this.elements)this.parent.showMe(this.elements[i].domEle);key&&(helper.checkType(key,"string")?this.parent.hideMe(this.elements[key].domEle):helper.checkType(key,"function")&&key()),helper.checkType(_ftn,"function")&&_ftn()};var helper={getLength:function(_obj){var counter=0;for(var i in _obj)counter++;return counter},checkType:function(_obj,_type){if("string"==typeof _type){var isType=!1;switch(_type){case"string":"string"==typeof _obj&&(isType=!0);break;case"array":_obj.constructor===Array&&(isType=!0);break;case"undefined":void 0===_obj&&(isType=!0);break;case"function":"function"==typeof _obj&&(isType=!0);break;case"object":"object"==typeof _obj&&(isType=!0);break;default:console.error("Error: Something's up with parameter #2"),console.info("Just put the right type please.")}return isType}console.error("One/All of your params aren't strings")},getFirst:function(_obj){var toReturn=!1;if(_obj){for(var i in _obj){toReturn=!!_obj[i]&&_obj[i];break}return toReturn||(console.error("There are no objects in the object."),console.info("Please add one or more objects inside the given object. So that this function can actually find the first element")),toReturn}console.error("There are no parameters"),console.info("Please add an object in as a parameter")},ifKeyExists:function(key,_obj){var exists=!1;for(var i in _obj)i===key&&(exists=!0);return exists},addElement:function(_obj,_key,_id){_obj.elements[_key]={domEle:document.getElementById(_id)}}};
//# sourceMappingURL=switchr.min.js.map