var Switchr=function(e){function t(e){this.elements={},this.add=function(e,t){function r(e,t,r){e.elements[t]={domEle:document.getElementById(r)}}if(s.ifKeyExists(e,this.elements))console.error("The key ("+e+") already exists."),console.info("Please use a different key");else if(s.checkType(e,"string")&&s.checkType(t,"undefined"))r(this,e,e);else if(s.checkType(e,"array")&&s.checkType(t,"undefined"))for(var n=0,i=e.length;n<i;n++)s.checkType(e[n],"string")&&r(this,e[n],e[n]);else if(s.checkType(e,"string")&&s.checkType(t,"string"))r(this,e,t);else if(s.checkType(e,"array")&&s.checkType(t,"array"))for(var n=0,i=e.length;n<i;n++)s.checkType(e[n],"string")&&s.checkType(t[n],"string")&&r(this,e[n],t[n])},this.hide=function(e,t){if(e){if(s.checkType(e,"string"))r.hideMe(this.elements[e].domEle);else if(s.checkType(e,"array"))for(var n=0,i=e.length;n<i;n++)r.hideMe(this.element[e[n]].domEle),s.checkType(t,"function")&&t(this.elements[e[n]].domEle);else if(s.checkType(e,"function")){var o=s.getFirst(this.elements);r.hideMe(o.domEle),e(o.domEle)}}else{var o=s.getFirst(this.elements);r.hideMe(o.domEle)}s.checkType(t,"function")&&t(this.elements[e].domEle)},this.hideAll=function(e,t){for(var n in this.elements)r.hideMe(this.elements[n].domEle);e&&(s.checkType(e,"string")?r.showMe(this.elements[e].domEle):s.checkType(e,"function")&&e()),s.checkType(t,"function")&&t()},this.show=function(e,t){if(e){if(s.checkType(e,"string"))r.showMe(this.elements[e].domEle);else if(s.checkType(e,"array"))for(var n=0,i=e.length;n<i;n++)r.showMe(this.element[e[n]].domEle),s.checkType(t,"function")&&t(this.elements[e[n]].domEle);else if(s.checkType(e,"function")){var o=s.getFirst(this.elements);r.showMe(o.domEle),e(o.domEle)}}else{var o=s.getFirst(this.elements);r.showMe(o.domEle)}s.checkType(t,"function")&&t(this.elements[e].domEle)},this.showAll=function(e,t){for(var n in this.elements)r.showMe(this.elements[n].domEle);e&&(s.checkType(e,"string")?r.hideMe(this.elements[e].domEle):s.checkType(e,"function")&&e()),s.checkType(t,"function")&&t()}}var r=this;this.helper={};var s=this.helper;return s.getLength=function(e){var t=0;for(var r in e)t++;return t},s.checkType=function(e,t){if("string"==typeof t){var r;switch(t){case"string":r="string"==typeof e;break;case"array":r=e.constructor===Array;break;case"undefined":r=void 0===e;break;case"function":r="function"==typeof e;break;case"object":r="object"==typeof e;break;default:console.error("Error: Something's up with parameter #2"),console.info("Just put the right type please.")}if(void 0!==r)return r}else console.error("One/All of your params aren't strings"),console.info("Please use valid datatype (aka strings!!!!!)")},s.getFirst=function(e){var t=!1;if(e){for(var r in e){t=!!e[r]&&e[r];break}return t||(console.error("There are no objects in the object."),console.info("Please add one or more objects inside the given object. So that this function can actually find the first element")),t}console.error("There are no parameters"),console.info("Please add an object in as a parameter")},s.ifKeyExists=function(e,t){var r=!1;for(var s in t)s===e&&(r=!0);return r},this.Groups={},this.baseGroupName="Father",this.hideMe=function(e){e?e.hidden=(e.hidden,!0):(console.error("There are no parameters"),console.info("Please add an html element in as a parameter"))},this.showMe=function(e){e?e.hidden=(e.hidden,!1):(console.error("There are no parameters"),console.info("Please add an html element in as a parameter"))},this.addGroup=function(e){if(e&&s.ifKeyExists(e,this.Groups)){if(s.checkType(e,"string"))this.createGroup(e);else if(s.checkType(e,"array"))for(var t=0,r=e.length;t<r;t++)this.createGroup(e[t])}else console.error("There are no parameters or your param isn't a string"),console.info("Please add either a string or array of strings as parameter")},this.createGroup=function(e){this.Groups[e]=new t(e)},this.group=function(e){var t={};if(e){if(e){var r=!1;for(var n in this.Groups)if(e===n){t=this.Groups[e],r=!0;break}if(!r)return console.error("Your key: "+e+". was not found in the Group Object."),console.info("Please add this key using addGroup(key)"),!1}}else t=s.getFirst(this.Groups),t||(console.error("There are no groups in the Group Object."),console.info("Please add one or more groups using the addGroup(key)"));return t},this.init=function(e){if(e)if(s.checkType(e,"array"))for(var t=0,r=e.length;t<r;t++)s.checkType(e[t],"string")&&this.createGroup(e[t]);else console.error("Parameter 1's data type should be Array. Data type of inputed parameter "+typeof e);else this.createGroup(this.baseGroupName)},this}(window);